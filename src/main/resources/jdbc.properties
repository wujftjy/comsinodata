#=================Oracle Connection Configuration   =================
#数据库驱动名称
sysware.jdbc.driverClassName = oracle.jdbc.OracleDriver

#数据库连接URL 请在sysware.properties中配置如下参数的值
#sysware.oracle.ip
#sysware.oracle.port
#sysware.oracle.service.name
sysware.jdbc.url= jdbc:oracle:thin:@(DESCRIPTION =(ADDRESS_LIST =(ADDRESS = (PROTOCOL = TCP)(HOST = 192.168.5.200)(PORT = 1521)))(CONNECT_DATA =(SERVICE_NAME = sysware)))
#sysware.jdbc.url= jdbc:oracle:thin:@(DESCRIPTION =(ADDRESS_LIST =(ADDRESS = (PROTOCOL = TCP)(HOST = 192.168.0.146)(PORT = 1521)))(CONNECT_DATA =(SERVICE_NAME = sysware)))

#数据库连接用户名，请在sysware.properties中配置sysware.p2m.oracle.username的值
sysware.jdbc.username = p2m_sf_20151010

#数据库连接用户，请在sysware.properties中配置sysware.p2m.oracle.password的值
sysware.jdbc.password = p2m_sf_20151010
#初始化时获取的连接数，取值应在minPoolSize与maxPoolSize之间；Default: 3
sysware.jdbc.initialPoolSize = 3

#连接池中保留的最小连接数
sysware.jdbc.minPoolSize = 2

#连接池中保留的最大连接数  ；Default: 15
sysware.jdbc.maxPoolSize = 120

#最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0
sysware.jdbc.maxIdleTime = 60

#当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3
sysware.jdbc.acquireIncrement = 5
# 每60秒检查所有连接池中的空闲连接。Default: 0
sysware.jdbc.idleConnectionTestPeriod = 60
#数据库方言
sysware.dialect	= com.sysware.framework.dbaccess.hibernate.SyswareOraclePageDialect

sysware.jdbc.use_scrollable_resultset = true

#----------------------------------其他的配置信息-------------------------------------
sysware.show_sql = false



#----------------------------------针对proxool数据源的特殊配置-------------------------------------
#alias:数据源的别名
sysware.alias = OraclePool

#proxool自动侦察各个连接状态的时间间隔(毫秒),侦察到空闲的连接就马上回收,超时的销毁 默认30秒)
sysware.houseKeepingSleepTime = 300000

#连接池中可用的连接数量.如果当前的连接池中的连接少于这个数值.新的连接将被建立(假设没有超过最大可用数).
#例如.我们有3个活动连接2个可用连接,而我们的prototype-count是4,那么数据库连接池将试图建立另外2个连接.
#这和 minimum-connection-count不同. minimum-connection-count把活动的连接也计算在内.prototype-count 是spare connections 的数量.
sysware.prototypeCount = 5

#最大的数据库连接数.默认是15
sysware.maximumConnectionCount = 200

#最小的数据库连接数，默认是5
sysware.minimumConnectionCount = 5

#是指在任一时刻，可以（同时）建立的最大连接数，也就是说，就是已经请求的、但还没可用的新连接数量。
#因为连接可以用多线程建立，从决定要建立连接到连接可用是需要一定时间的，所以我们需要一些方式来避免大量的线程想同时建立连接。
#（我们本应该找一个更聪明的方式来解决这个问题，总有一天我们会找到的）默认值是 10
#当我使用140个用户，进行压力测试时，发现偶尔，会有多于10个要求同时建立连接的请求，当请求数量超过限定的数值时，会出现连接失败的情况。
#因此结论就是，当数据库并发连接可能会比较高的应用，这个值应该适当的设大一点。
sysware.simultaneousBuildThrottle = 30

#指一个连接最大的存活时间（毫秒为单位），超过这个时间，连接会被杀死。默认值是4小时。
sysware.maximumConnectionLifetime = 60000

#如果发现了空闲的数据库连接.house keeper 将会用这个语句来测试.这个语句最好非常快的被执行.如果没有定义,测试过程将会被忽略
sysware.houseKeepingTestSql = select sysdate from dual

#连接池使用状况统计
sysware.statistics = 1m,15m,1d

#日志统计跟踪类型。 参数“ERROR”或 “INFO”
sysware.statisticsLogLevel = INFO,DEBUG,WARN,ERROR,FATAL

#如果housekeeper 检测到某个线程的活动时间大于这个数值.它将会杀掉这个线程.所以确认一下你的服务器的带宽.然后定一个合适的值.默认是5分钟.
sysware.maximumActiveTime = 300000

#如果连接池在运行当中，出现网络或者数据库故障而无法连接到数据库，在恢复正常以后，由于连接是在连接池中持久保存的，
#会出现连接仍然不可用的情况，这时连接池里的连接实际上都是坏连接，怎么让连接池可以自动重连清除这些坏连接呢？
# 只要配置了test-before-use 参数，即每次取出连接都检查连接是否可用，就可以做到让连接池实现在故障恢复后自动重连接
#当test-before-use/test-after-use 同时为false时houseKeepingTestSql可以为空
sysware.testBeforeUse = true
#
sysware.testAfterUse = true








